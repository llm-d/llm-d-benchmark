name: Run Benchmark

on:
  workflow_dispatch:
    inputs:
      input_dir:
        description: 'Input directory for benchmark results'
        required: false
        default: './tmp/cicd/analysis'
      output_dir:
        description: 'Output directory name (S3 prefix and artifact name)'
        required: false
        default: ''

  push:
    branches:
      - main

  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

jobs:
  run-benchmark:
    name: Benchmark Test
    runs-on: [k8s-util]
    timeout-minutes: 240

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set input and output directory environment variables
        run: |
          echo "INPUT_DIR=${{ github.event.inputs.input_dir }}" >> $GITHUB_ENV

          if [ -z "${{ github.event.inputs.output_dir }}" ]; then
            timestamp=$(date -u +%Y%m%dT%H%M%SZ)
            echo "OUTPUT_DIR=benchmark-results-${timestamp}" >> $GITHUB_ENV
            echo "Using generated output dir: benchmark-results-${timestamp}"
          else
            echo "OUTPUT_DIR=${{ github.event.inputs.output_dir }}" >> $GITHUB_ENV
            echo "Using provided output dir: ${{ github.event.inputs.output_dir }}"
          fi

      - name: Set up kubeconfig from secret
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
        shell: bash

      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          oc_version: '4.6'

      - name: Install Kustomize
        uses: multani/action-setup-kustomize@v1
        with:
          version: 5.6.0

      - name: Populate python deps
        run: |
          echo -e "pandas\ngrip>=4.6.0\nmatplotlib>=3.7.0\nnumpy>=1.22.0\nseaborn>=0.12.0\nkubernetes>=28.0.0" > requirements.txt

      - name: Install python deps
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: Set up kubeconfig from secret
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
        shell: bash

      - name: Cleanup target cloud (standalone)
        run: ./setup/teardown.sh -c ocp_A100_standalone_llama-3b

      - name: Cleanup target cloud (deployer)
        run: ./setup/teardown.sh -c ocp_A100_deployer_llama-3b

      - name: Standup (deployer)
        run: ./setup/standup.sh -c ocp_A100_deployer_llama-3b

      - name: Run benchmark
        run: ./setup/run.sh -c ocp_A100_deployer_llama-3b
      
      - name: Cleanup target cloud (deployer)
        env:
          LLMDBENCH_HF_TOKEN: ${{ secrets.LLMDBENCH_HF_TOKEN }}
        run: ./setup/teardown.sh -c ocp_A100_deployer_llama-3b

      - name: Configure AWS Credentials for IBM COS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-south

      - name: Upload results to IBM Cloud Object Storage
        run: |
          aws configure set default.s3.signature_version s3v4
          aws s3 cp "$INPUT_DIR" "s3://${{ secrets.COS_BUCKET_NAME }}/$OUTPUT_DIR/" \
            --recursive --endpoint-url ${{ secrets.COS_ENDPOINT_URL }}

      - name: Archive benchmark results as GitHub artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_DIR }}
          path: ${{ env.INPUT_DIR }}
          retention-days: 14
