diff --git a/chart-dependencies/ci-deps.sh b/chart-dependencies/ci-deps.sh
index 1b1b0e5..db39977 100755
--- a/chart-dependencies/ci-deps.sh
+++ b/chart-dependencies/ci-deps.sh
@@ -24,7 +24,7 @@ CWD=$( dirname -- "$( readlink -f -- "$0"; )"; )
 
 ## Populate manifests
 MODE=${1:-apply} # allowed values "apply" or "delete"
-
+BACKEND=${2:-$(helm show values $CWD/../charts/llm-d --jsonpath '{.gateway.gatewayClassName}')}
 if [[ "$MODE" == "apply" ]]; then
     LOG_ACTION_NAME="Installing"
 else
@@ -40,7 +40,6 @@ log_success "üö™ GAIE CRDs: ${LOG_ACTION_NAME}..."
 kubectl $MODE -k https://github.com/llm-d/llm-d-inference-scheduler/deploy/components/crds-gie || true
 
 ### Install Gateway provider
-backend=$(helm show values $CWD/../charts/llm-d --jsonpath '{.gateway.gatewayClassName}')
 log_success "üéí Gateway provider '${COLOR_BLUE}${backend}${COLOR_RESET}${COLOR_GREEN}': ${LOG_ACTION_NAME}...${COLOR_RESET}"
 
-$CWD/$backend/install.sh $MODE
+$CWD/$BACKEND/install.sh $MODE
diff --git a/charts/llm-d/Chart.yaml b/charts/llm-d/Chart.yaml
index 4dd36ac..4463598 100644
--- a/charts/llm-d/Chart.yaml
+++ b/charts/llm-d/Chart.yaml
@@ -9,7 +9,7 @@ keywords:
   - vllm
   - llm-d
   - lmcache
-kubeVersion: ">= 1.30.0-0"
+kubeVersion: ">= 1.28.0-0"
 maintainers:
   - name: llm-d
     url: https://github.com/llm-d/llm-d-deployer
diff --git a/quickstart/llmd-installer.sh b/quickstart/llmd-installer.sh
index 502bfa9..0ed3855 100755
--- a/quickstart/llmd-installer.sh
+++ b/quickstart/llmd-installer.sh
@@ -25,6 +25,8 @@ DISABLE_METRICS=false
 MONITORING_NAMESPACE="llm-d-monitoring"
 DOWNLOAD_MODEL=""
 DOWNLOAD_TIMEOUT="600"
+GATEWAY_TYPE="istio"
+HELM_RELEASE_NAME="llm-d"
 
 # Minikube-specific flags & globals
 USE_MINIKUBE=false
@@ -54,6 +56,8 @@ Options:
   -t, --download-timeout           Timeout for model download job
   -k, --minikube                   Deploy on an existing minikube instance with hostPath storage
   -g, --context                    Supply a specific Kubernetes context
+  -j, --gateway                    Select gateway type (istio or kgateway)
+  -r, --release                    (Helm) Chart release name
   -h, --help                       Show this help and exit
 EOF
 }
@@ -138,6 +142,8 @@ parse_args() {
       -t|--download-timeout)           DOWNLOAD_TIMEOUT="$2"; shift 2 ;;
       -k|--minikube)                   USE_MINIKUBE=true; shift ;;
       -g|--context)                    KUBERNETES_CONTEXT="$2"; shift 2 ;;
+      -j|--gateway)                    GATEWAY_TYPE="$2"; shift 2 ;;
+      -r|--release)                    HELM_RELEASE_NAME="$2"; shift 2 ;;
       -h|--help)                       print_help; exit 0 ;;
       *)                               die "Unknown option: $1" ;;
     esac
@@ -386,7 +392,7 @@ create_pvc_and_download_model_if_needed() {
 install() {
   if [[ "${SKIP_INFRA}" == "false" ]]; then
     log_info "üèóÔ∏è Installing GAIE Kubernetes infrastructure‚Ä¶"
-    bash ../chart-dependencies/ci-deps.sh
+    bash ../chart-dependencies/ci-deps.sh apply ${GATEWAY_TYPE}
     log_success "GAIE infra applied"
   fi
 
@@ -496,7 +502,7 @@ else
 fi
 
   log_info "üöö Deploying llm-d chart with ${VALUES_PATH}..."
-  $HCMD upgrade -i llm-d . \
+  $HCMD upgrade -i ${HELM_RELEASE_NAME} . \
     ${DEBUG} \
     --namespace "${NAMESPACE}" \
     "${VALUES_ARGS[@]}" \
@@ -504,7 +510,7 @@ fi
     --set gateway.kGatewayParameters.proxyUID="${PROXY_UID}" \
     --set ingress.clusterRouterBase="${BASE_OCP_DOMAIN}" \
     "${METRICS_ARGS[@]}"
-  log_success "llm-d deployed"
+  log_success "$HELM_RELEASE_NAME deployed"
 
   post_install
 
@@ -535,7 +541,7 @@ post_install() {
 uninstall() {
   if [[ "${SKIP_INFRA}" == "false" ]]; then
     log_info "üóëÔ∏è Tearing down GAIE Kubernetes infrastructure‚Ä¶"
-    bash ../chart-dependencies/ci-deps.sh delete
+    bash ../chart-dependencies/ci-deps.sh delete ${GATEWAY_TYPE}
   fi
   MODEL_ARTIFACT_URI=$($KCMD get modelservice --ignore-not-found -n ${NAMESPACE} -o yaml | yq '.items[].spec.modelArtifacts.uri')
   PROTOCOL="${MODEL_ARTIFACT_URI%%://*}"
@@ -546,7 +552,7 @@ uninstall() {
     $KCMD delete job download-model --ignore-not-found || true
   fi
   log_info "üóëÔ∏è Uninstalling llm-d chart..."
-  $HCMD uninstall llm-d --ignore-not-found --namespace "${NAMESPACE}" || true
+  $HCMD uninstall ${HELM_RELEASE_NAME} --ignore-not-found --namespace "${NAMESPACE}" || true
 
   log_info "üóëÔ∏è Deleting namespace ${NAMESPACE}..."
   $KCMD delete namespace "${NAMESPACE}" --ignore-not-found || true
